<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="goodee.gdj58.booking_c.mapper.customer.CustomerMapper">
	<!-- 아이디 찾기 -->
	<select id="selectCustomerId" parameterType="goodee.gdj58.booking_c.vo.Customer" resultType="java.lang.String">
		SELECT customer_id customerId
		FROM customer
		WHERE customer_email=#{customerEmail} AND customer_name=#{customerName};
	</select>
	
	<!-- 고객 로그인 -->
	<select id="selectCustomer" parameterType="goodee.gdj58.booking_c.vo.Customer" resultType="goodee.gdj58.booking_c.vo.Customer">
		SELECT
			customer_id customerId
			, customer_name customerName
			, customer_nickname customerNickName
		FROM customer
		WHERE customer_id=#{customerId} AND customer_pw=PASSWORD(#{customerPw})
	</select>
	
	<!-- 고객 회원가입(토탈ID) -->
	<insert id="insertTotalId" parameterType="goodee.gdj58.booking_c.vo.TotalId">
		INSERT INTO total_id(
			id
			, total_id_kind
			, total_id_active
			) VALUES (
				#{id}
				, #{totalIdKind}
				, #{totalIdActive}
			)
	</insert>
	
	<!-- 고객 회원가입(사진) -->
	<insert id="insertCustomerImg" parameterType="goodee.gdj58.booking_c.vo.CustomerImg">
		INSERT INTO customer_img(
			customer_id
			, customer_img_save_name
			, customer_img_origin_name
			, customer_img_kind
			, customer_img_size
			) VALUES (
				#{customerId}
				, #{customerImgSaveName}
				, #{customerImgOriginName}
				, #{customerImgKind}
				, #{customerImgSize}
			)
	</insert>

	<!-- 고객 회원가입 -->
	<insert id="insertCustomer" parameterType="goodee.gdj58.booking_c.vo.Customer">
		INSERT INTO customer(
			customer_id
			, customer_pw
			, customer_name
			, customer_nickname
			, customer_postcode
			, customer_address
			, customer_phone
			, customer_email
			, customer_pay
			, customer_point
			, customer_birth
			, customer_gender
			, customer_email_marketing_accept
			, customer_info_agree
			) VALUES (
				#{customerId}
				, PASSWORD(#{customerPw})
				, #{customerName}
				, #{customerNickname}
				, #{customerPostcode}
				, #{customerAddress}
				, #{customerPhone}
				, #{customerEmail}
				, 0
				, 0
				, #{customerBirth}
				, #{customerGender}
				, #{emailMarketingAccept}
				, #{infoAgree}
			)
	</insert>
	
	<!-- 예약시 예약시간 리스트-->
	<select id="getBookingProductTimeList" resultType="java.util.Map" parameterType="String">
		WITH RECURSIVE CTE  AS (
        SELECT (SELECT bkcd.booking_company_opentime bkcdOpen FROM booking_company_detail bkcd WHERE bkcd.booking_company_id = #{bkcId}) AS DT
        FROM DUAL
        UNION ALL
        SELECT DATE_ADD(DT, INTERVAL 1 HOUR)
        FROM CTE
        WHERE DT &#60; (SELECT date_add(bkcd.booking_company_closetime, INTERVAL -1 hour) bkcdClose FROM booking_company_detail bkcd WHERE bkcd.booking_company_id = #{bkcId})
		)
		SELECT 
				DT bkpTime
		FROM CTE
	</select>
	
	<!-- 에약시 상품정보 확인 -->
	<select id="getBookingProductInfo" resultType="java.util.Map" parameterType="String">
		SELECT bkp.booking_product_name bkpName
				, bkp.booking_product_max_people bkpMax
				, bkp.booking_product_min_people bkpMin
				, bkp.booking_product_price bkpPrice
		FROM booking_product bkp
		WHERE bkp.booking_product_name = #{bkpName}
	
	</select>	
	<!-- 상품 예약 옵션 리스트 -->
	<select id="getBookingProductOptionList" resultType="java.util.Map" parameterType="String">
		SELECT bkp.booking_product_no 
				, bkp.booking_product_name bkpName
				, bkp.booking_product_max_people bkpMax
				, bkp.booking_product_min_people bkpMin
				, bkpo.booking_product_option_name bkpoName
				, bkpo.booking_product_option_memo bkpoMemo
				, bkpo.booking_product_option_price bkpoPrice 
		FROM booking_product bkp
				INNER JOIN booking_product_option bkpo ON bkp.booking_product_no = bkpo.booking_product_no
		WHERE bkp.booking_product_name = #{bkpName}
	</select>
	
	
	<!-- 상품 예약 시간 선택 페이지 -->
	<select id="getBookingProductSelectTime" resultType="java.util.Map" parameterType="String">
		SELECT bkc.booking_company_id bkcId
				, bkc.booking_company_name bkcName
				, if(bkci.booking_company_img_origin_name IS NULL, '업체사진없음',bkci.booking_company_img_origin_name ) bkciOrigin
				, bkcd.booking_company_type_content bkcdType
				, bkct.group_no 
		FROM booking_company bkc 
				INNER JOIN booking_company_detail bkcd ON bkc.booking_company_id = bkcd.booking_company_id
				INNER JOIN booking_company_type bkct ON bkcd.booking_company_type_content = bkct.booking_company_type_content
				LEFT OUTER JOIN booking_company_img bkci ON bkc.booking_company_id = bkci.booking_company_id
		WHERE bkc.booking_company_id = #{bkcId}
		
		GROUP BY bkciOrigin
	
	</select>
	
	<!-- 에약업체 세부정보 지도 -->
	<select id="getBookingCompanyDetailMap" resultType="java.util.Map" parameterType="String">
		SELECT bkc.booking_company_name bkcName
				, bkc.booking_company_address bkcAddress
		FROM booking_company bkc
		WHERE bkc.booking_company_id = #{bkcId}
		
	</select>
	
	<!-- 예약업체 세부정보 리뷰 -->
	<select id="getBookingCompanyDetailReview" resultType="java.util.Map" parameterType="String">
		SELECT bk.booking_date bkDate
				, bk.customer_id bkCustomerId
				, ct.customer_nickname ctNick
				, if(cti.customer_img_origin_name IS NULL, '고객사진없음', cti.customer_img_origin_name) ctiOrigin
				, rv.review_memo rvMemo
				, rv.star_rating rvStar
				, rv.createdate rvCreatedate
				, if(rvi.review_img_origin_name IS NULL, '리뷰사진없음', rvi.review_img_origin_name) rviOrigin
				, bkp.booking_product_name bkpName
		FROM booking bk
			INNER JOIN booking_product bkp ON bk.product_no = bkp.booking_product_no 
			inner JOIN review rv ON bk.booking_no = rv.booking_no
			LEFT OUTER JOIN customer ct ON bk.customer_id = ct.customer_id
			LEFT OUTER JOIN customer_img cti ON bk.customer_id = cti.customer_id
			LEFT OUTER JOIN review_img rvi ON rv.booking_no = rvi.booking_no
		WHERE bk.booking_company_id = #{bkcId}
	</select>
	<!-- 예약업체 세부정보 예약 -->
	<select id="getBookingCompanyDetailBooking" resultType="java.util.Map" parameterType="String">
		SELECT bkc.booking_company_id bkcId
				, bkc.booking_company_name bkcName
				, bkp.booking_product_name bkpName
				, bkp.booking_product_price bkpPrice
				, if(bkpi.booking_product_img_origin_name IS NULL,'상품사진없음',bkpi.booking_product_img_origin_name) bkpiOrigin
				, bkct.group_no bkctNo
		FROM booking_company bkc
			INNER JOIN booking_company_detail bkcd ON bkc.booking_company_id = bkcd.booking_company_id
			INNER JOIN booking_company_type bkct ON bkcd.booking_company_type_content = bkct.booking_company_type_content
			INNER JOIN booking_product bkp ON bkc.booking_company_id = bkp.booking_company_id
			LEFT OUTER  JOIN booking_product_img bkpi ON bkp.booking_product_no = bkpi.booking_product_no
		WHERE bkc.booking_company_id = #{bkcId}
		GROUP BY bkpName
	</select>
	
	<!-- 예약업체 세부정보 홈 -->
	<select id="getBookingCompanyDetailHome" resultType="java.util.Map" parameterType="String">
		SELECT bkc.booking_company_address bkcAddress
				, bkc.booking_company_phone bkcPhone
				, bkcd.booking_company_addition_service bkcdService
				, bkcd.booking_company_opentime bkcdOpen
				, bkcd.booking_company_closetime bkcdClose
				, if(bkcoff.booking_company_offday_date IS NULL, '연중무휴',
				(case DAYOFWEEK(bkcoff.booking_company_offday_date)
		                    when '1' then '일요일'
		                    when '2' then '월요일'
		                    when '3' then '화요일'
		                    when '4' then '수요일'
		                    when '5' then '목요일'
		                    when '6' then '금요일'
		                    when '7' then '토요일'
		                END)) offday
		FROM booking_company bkc
			INNER JOIN booking_company_detail bkcd ON bkc.booking_company_id = bkcd.booking_company_id
			LEFT OUTER JOIN booking_company_offday bkcoff ON bkc.booking_company_id = bkcoff.booking_company_id
		WHERE bkc.booking_company_id = #{bkcId}
		GROUP BY offday
	</select>
	<!-- 예약업체 세부정보 공통 -->
	<select id="getBookingCompanyDetailCommon" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT bk.booking_company_id bkcId
			, bkc.booking_company_name bkcName
			, rv.star_rating rvStar
			, COUNT(bk.booking_company_id) countReview
			, SUM( rv.star_rating) sumStar
			,if((SELECT bkci.booking_company_img_origin_name bkciOrigin
				FROM booking_company bkc
					INNER JOIN booking_company_img bkci ON bkc.booking_company_id = bkci.booking_company_id
				WHERE bkc.booking_company_id = #{bkcId} AND bkci.booking_company_img_level = #{bkciLevel}) IS NULL, '기업사진없음', 
				(SELECT bkci.booking_company_img_origin_name bkciOrigin
				FROM booking_company bkc
					INNER JOIN booking_company_img bkci ON bkc.booking_company_id = bkci.booking_company_id
				WHERE bkc.booking_company_id = #{bkcId} AND bkci.booking_company_img_level = #{bkciLevel})
				 ) bkciOrigin
			,(SELECT bkcd.booking_company_type_content bkcType
				FROM booking_company_detail bkcd
				WHERE booking_company_id = #{bkcId}) bkcType
		FROM booking bk 
			INNER JOIN booking_company bkc ON bk.booking_company_id = bkc.booking_company_id
			INNER JOIN review rv ON bk.booking_no = rv.booking_no
		WHERE bk.booking_company_id = #{bkcId}
	</select>
	
	<!-- 예약 업체 총 수 -->
	<select id="bookingCompanyCount" resultType="int" parameterType="String">
		SELECT COUNT(a.bkcName) count
	
		FROM ( SELECT  bkc.booking_company_id bkcId
					 , bkc.booking_company_name bkcName
					 , bkcd.booking_company_type_content bkcdType
					 , if(bkci.booking_company_img_origin_name IS NULL,'업체사진없음',bkci.booking_company_img_origin_name) bkciOrigin
					 , bkcd.booking_company_addition_service bkcdAddService
					 , if(rv.review_memo IS NULL, '리뷰없음', rv.review_memo) rvMemo 
					 , if(rv.star_rating IS NULL, '별점없음', rv.star_rating) rvRating
					 , if(rvi.review_img_origin_name IS NULL, '리뷰사진없음', rvi.review_img_origin_name) rviOrigin
					 , if(bkcd.booking_company_opentime &#60;= NOW() AND bkcd.booking_company_closetime >= NOW(), '영업중','영업종료') bkcOpen
					 , bkci.booking_company_img_level bkciLevel
				FROM booking_company bkc
					INNER JOIN booking_company_detail bkcd ON bkc.booking_company_id = bkcd.booking_company_id
					LEFT OUTER JOIN booking_company_img bkci ON bkc.booking_company_id = bkci.booking_company_id
					INNER JOIN booking bk ON bkc.booking_company_id = bk.booking_company_id
					LEFT OUTER JOIN review rv ON bk.booking_no = rv.booking_no
					LEFT OUTER JOIN review_img rvi ON rv.booking_no = rvi.booking_no
				WHERE
						((bkcd.booking_company_type_content LIKE  CONCAT('%',#{searchWord},'%')) OR (bkc.booking_company_name LIKE  CONCAT('%',#{searchWord},'%')))
						AND (bkcd.booking_company_addition_service LIKE  CONCAT('%',#{optionWord},'%')) 
						AND (bkci.booking_company_img_level = 'Y' OR bkci.booking_company_img_level IS NULL)
		     	GROUP BY bkc.booking_company_id
				ORDER BY bkc.booking_company_name ASC 
			  )a
	</select>
	
	<!-- 예약업체 리스트 출력 -->
	<select id="getBookingCompanyList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT  bkc.booking_company_id bkcId
				 , bkc.booking_company_name bkcName
				 , bkcd.booking_company_type_content bkcdType
				 , if(bkci.booking_company_img_origin_name IS NULL,'업체사진없음',bkci.booking_company_img_origin_name) bkciOrigin
				 , bkcd.booking_company_addition_service bkcdAddService
				 , if(rv.review_memo IS NULL, '리뷰없음', rv.review_memo) rvMemo 
				 , if(rv.star_rating IS NULL, '별점없음', rv.star_rating) rvRating
				 , if(rvi.review_img_origin_name IS NULL, '리뷰사진없음', rvi.review_img_origin_name) rviOrigin
				 , if(bkcd.booking_company_opentime &#60;= NOW() AND bkcd.booking_company_closetime >= NOW(), 'Open','Close') bkcRunning
				 , bkci.booking_company_img_level bkciLevel
				 , bkcd.booking_company_opentime bkcOpen
           	     , bkcd.booking_company_closetime bkcClose
		FROM booking_company bkc
			INNER JOIN booking_company_detail bkcd ON bkc.booking_company_id = bkcd.booking_company_id
			LEFT OUTER JOIN booking_company_img bkci ON bkc.booking_company_id = bkci.booking_company_id
			INNER JOIN booking bk ON bkc.booking_company_id = bk.booking_company_id
			LEFT OUTER JOIN review rv ON bk.booking_no = rv.booking_no
			LEFT OUTER JOIN review_img rvi ON rv.booking_no = rvi.booking_no
		WHERE
				((bkcd.booking_company_type_content LIKE  CONCAT('%',#{searchWord},'%')) OR (bkc.booking_company_name LIKE  CONCAT('%',#{searchWord},'%')))
				AND (bkcd.booking_company_addition_service LIKE  CONCAT('%',#{optionWord},'%')) AND (bkci.booking_company_img_level = 'Y' OR bkci.booking_company_img_level IS NULL)
     	GROUP BY bkc.booking_company_id
		ORDER BY bkc.booking_company_name ASC 
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
</mapper>